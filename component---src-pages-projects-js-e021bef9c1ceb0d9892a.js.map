{"version":3,"file":"component---src-pages-projects-js-e021bef9c1ceb0d9892a.js","mappings":"2LAGe,SAASA,IACtB,OACE,uBAAKC,UAAU,qBACb,uBAAKC,IAAI,eAAeC,IAAI,e,wHCmClC,EAzCqB,CACnB,CACEC,MAAO,SACPC,UAAW,yBACXC,IAAK,wCACLC,YACE,+EACFC,KAAM,CACJ,QACA,QACA,SACA,UACA,MACA,UACA,SACA,cAGJ,CACEJ,MAAO,WACPC,UAAW,uBACXC,IAAK,0CACLC,YACE,mEACFC,KAAM,CAAC,QAAS,SAAU,QAAS,cAAe,eAEpD,CACEJ,MAAO,cACPC,UAAW,wBACXC,IAAK,6CACLC,YAAa,wCACbC,KAAM,CAAC,aAAc,YAAa,SAAU,SAE9C,CACEJ,MAAO,aACPC,UAAW,qBACXC,IAAK,4CACLC,YAAa,yDACbC,KAAM,CAAC,KAAM,MAAO,YAAa,cCnCtB,SAASC,EAAIC,GAC1B,OAAO,uBAAKT,UAAU,uBAAuBS,EAAMC,SCAtC,SAASC,EAAKF,GAC3B,OACE,gBAACG,EAAA,MAAD,CACEZ,UAAU,iBACVa,WAAY,CAAEC,MAAO,MACrBC,QAAS,kBAAMC,OAAOC,KAAKR,EAAMS,cAEjC,uBAAKlB,UAAU,cACb,0BAAKS,EAAMU,YAEb,uBAAKnB,UAAU,4BACb,uBACEC,IAAKQ,EAAMW,cACXlB,IAAI,iBACJmB,OAAO,MACPC,OAAQ,kBAAMb,EAAMc,kBAAkBd,EAAMe,eAAiB,OAGjE,uBAAKxB,UAAU,8BACb,qBAAGA,UAAU,oBAAoBS,EAAMgB,iBACvC,uBAAKzB,UAAU,kBACZS,EAAMiB,SAASC,KAAI,SAAAC,GAAG,OACrB,gBAACpB,EAAD,CAAKE,QAASkB,EAAKC,IAAKD,UCnBrB,SAASE,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,GAA9CP,EAAP,KAAuBD,EAAvB,KACA,OACE,gCACE,gBAACX,EAAA,MAAD,CACEoB,MAAO,CAAEC,QAASC,EAAAA,SAAiBV,EAAiB,OAAS,QAC7DxB,UAAU,wBACVmC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,WAAY,CAAEC,SAAU,KAExB,uBAAKvC,UAAU,4BACb,sBAAIA,UAAU,kBAAd,YACA,4BAEF,uBAAKA,UAAU,wBACZkC,EAAAA,KAAU,SAAAM,GAAI,OACb,gBAAC7B,EAAD,CACEa,eAAgBA,EAChBD,kBAAmBA,EACnBH,cAAeoB,EAAKpC,UACpBe,UAAWqB,EAAKrC,MAChBsB,gBAAiBe,EAAKlC,YACtBY,WAAYsB,EAAKnC,IACjBqB,SAAUc,EAAKjC,KACfsB,IAAKW,EAAKrC,aAKjB+B,EAAAA,SAAiBV,GAAkB,gBAACzB,EAAA,EAAD,O,cC9B3B,SAAS0C,IACtB,OACE,gCACE,gBAACC,EAAA,EAAD,KACE,wBAAMC,QAAQ,UACd,6CACA,wBAAMC,IAAI,YAAYC,KAAK,sCAE7B,uBAAK7C,UAAU,oBACb,gBAAC8C,EAAA,EAAD,MACA,gBAAChB,EAAD,MACA,gBAACiB,EAAA,EAAD","sources":["webpack://gatsby-starter-hello-world/./src/components/Spinner.jsx","webpack://gatsby-starter-hello-world/./src/data/projects-data.js","webpack://gatsby-starter-hello-world/./src/components/Tag.jsx","webpack://gatsby-starter-hello-world/./src/components/Post.jsx","webpack://gatsby-starter-hello-world/./src/components/PostGrid.jsx","webpack://gatsby-starter-hello-world/./src/pages/projects.js"],"sourcesContent":["import React from \"react\"\nimport \"../styles/spinner-styles.scss\"\n\nexport default function Spinner() {\n  return (\n    <div className=\"spinner-container\">\n      <img src=\"/spinner.svg\" alt=\"spinner\" />\n    </div>\n  )\n}\n","const projectsJson = [\n  {\n    title: \"strife\",\n    thumbnail: \"/thumbnails/strife.png\",\n    url: \"https://github.com/RushDynamic/Strife\",\n    description:\n      \"End-to-end encrypted VoIP and real-time chat powered by Socket.IO and WebRTC\",\n    tags: [\n      \"react\",\n      \"redux\",\n      \"nodejs\",\n      \"express\",\n      \"aes\",\n      \"mongodb\",\n      \"webrtc\",\n      \"socket.io\",\n    ],\n  },\n  {\n    title: \"finalism\",\n    thumbnail: \"/thumbnails/flsm.png\",\n    url: \"https://github.com/RushDynamic/finalism\",\n    description:\n      \"An overengineered URL shortener powered by Spring Boot and React\",\n    tags: [\"react\", \"docker\", \"redis\", \"spring-boot\", \"postgresql\"],\n  },\n  {\n    title: \"strife-live\",\n    thumbnail: \"/thumbnails/slive.png\",\n    url: \"https://github.com/RushDynamic/strife-live\",\n    description: \"Wrapper library for VoIP using WebRTC\",\n    tags: [\"javascript\", \"websocket\", \"webrtc\", \"voip\"],\n  },\n  {\n    title: \"filecastle\",\n    thumbnail: \"/thumbnails/fc.png\",\n    url: \"https://github.com/RushDynamic/FileCastle\",\n    description: \"AES encryption utility for files and folders (Windows)\",\n    tags: [\"c#\", \"aes\", \"buffering\", \"security\"],\n  },\n]\nexport default projectsJson\n","import React from \"react\"\nimport \"../styles/tags-styles.scss\"\n\nexport default function Tag(props) {\n  return <div className=\"tag-inner-container\">{props.tagName}</div>\n}\n","import React from \"react\"\nimport { motion } from \"framer-motion\"\nimport Tag from \"./Tag\"\n\nexport default function Post(props) {\n  return (\n    <motion.div\n      className=\"post-container\"\n      whileHover={{ scale: 1.05 }}\n      onClick={() => window.open(props.projectUrl)}\n    >\n      <div className=\"post-title\">\n        <h2>{props.postTitle}</h2>\n      </div>\n      <div className=\"post-thumbnail-container\">\n        <img\n          src={props.postThumbnail}\n          alt=\"post-thumbnail\"\n          height=\"150\"\n          onLoad={() => props.setLoadedImgCount(props.loadedImgCount + 1)}\n        />\n      </div>\n      <div className=\"post-description-container\">\n        <p className=\"post-description\">{props.postDescription}</p>\n        <div className=\"tags-container\">\n          {props.postTags.map(tag => (\n            <Tag tagName={tag} key={tag} />\n          ))}\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { motion } from \"framer-motion\"\nimport Spinner from \"./Spinner.jsx\"\nimport Posts from \"../data/projects-data.js\"\nimport Post from \"./Post\"\nimport \"../styles/posts-styles.scss\"\n\nexport default function PostGrid() {\n  const [loadedImgCount, setLoadedImgCount] = useState(0)\n  return (\n    <>\n      <motion.div\n        style={{ display: Posts.length === loadedImgCount ? \"flex\" : \"none\" }}\n        className=\"posts-outer-container\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"projects-title-container\">\n          <h1 className=\"projects-title\">Projects</h1>\n          <hr />\n        </div>\n        <div className=\"posts-grid-container\">\n          {Posts.map(post => (\n            <Post\n              loadedImgCount={loadedImgCount}\n              setLoadedImgCount={setLoadedImgCount}\n              postThumbnail={post.thumbnail}\n              postTitle={post.title}\n              postDescription={post.description}\n              projectUrl={post.url}\n              postTags={post.tags}\n              key={post.title}\n            />\n          ))}\n        </div>\n      </motion.div>\n      {Posts.length !== loadedImgCount && <Spinner />}\n    </>\n  )\n}\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"../styles/global-styles.scss\"\nimport Header from \"../components/Header\"\nimport PostGrid from \"../components/PostGrid\"\nimport Links from \"../components/Links\"\n\nexport default function Home() {\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Rush Dynamic</title>\n        <link rel=\"canonical\" href=\"https://rushdynamic.com/projects\" />\n      </Helmet>\n      <div className=\"global-container\">\n        <Header />\n        <PostGrid />\n        <Links />\n      </div>\n    </>\n  )\n}\n"],"names":["Spinner","className","src","alt","title","thumbnail","url","description","tags","Tag","props","tagName","Post","motion","whileHover","scale","onClick","window","open","projectUrl","postTitle","postThumbnail","height","onLoad","setLoadedImgCount","loadedImgCount","postDescription","postTags","map","tag","key","PostGrid","useState","style","display","Posts","initial","opacity","animate","transition","duration","post","Home","Helmet","charSet","rel","href","Header","Links"],"sourceRoot":""}